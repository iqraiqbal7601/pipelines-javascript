# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
stages:
- stage: Build
  displayName: Build stage
  
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
   
  # - job: installNodeJS
  #   displayName: Installing Node JS
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Using Node.js 10.x'
  
  # # - job: buildRun
  # #   displayName: Installing Packages and running the Build
  #   steps:     
      - script: |
          ls
          npm install
          npm run build
          ls
          pwd
        displayName: 'npm install and build'


  # - job: publishTestResult
  #   displayName: Publshing test results
  #   steps:     
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-*.xml'
     
  # - job: publishCorberturaResult
  #   displayName: Publshing coverage report
  #   steps:          
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
 
  # - job: archiveCode
  #   displayName: Archiving the code
  #   steps:          
      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
  
  # - job: publishCode
  #   displayName: Publishing the code
  #   steps:
      - task: PublishPipelineArtifact@1
        inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            artifact: 'drop'
            publishLocation: 'pipeline'
      
      - task: SnykSecurityScan@1
        inputs:
          serviceConnectionEndpoint: 'SNYK'
          testType: 'app'
          monitorWhen: 'always'
          failOnIssues: false